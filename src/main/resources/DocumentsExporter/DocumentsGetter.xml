<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>DocumentsExporter</web>
  <name>DocumentsGetter</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>DocumentsExporter.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1513589431000</creationDate>
  <date>1513854281000</date>
  <contentUpdateDate>1513854281000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki=false}}
#set ($mymap = {})
#set ($result = [])
#set ($query = $request.query)
#set ($docList = $services.query.hql($query).execute())
##
#if ($request.preview)
    #if ($docList.size() &lt;= 700)
        #foreach ($r in $docList)
            #set ($document = $xwiki.getDocument($r))
            #set ($docObj = {})
            #set ($docObj["name"] = $document.getTitle())
            #set ($docObj["author"] = $xwiki.getUserName($document.author, false))
            #set ($docObj["date"] = $document.creationDate.getTime())
            #set ($discard = $result.add($docObj))
        #end
    #else
        #set ($mymap["error"] = "E_TOO_MANY_RESULTS")
    #end
#else
    ## Get the documents
    #foreach($r in $docList)
        $result.add($r)
    #end
    ## Get the properties' pretty name
    #set ($encodedFields = $request.fields)
    #set ($fieldsTxt = $util.decodeURI($encodedFields))
    #set ($fields = $jsontool.parse($fieldsTxt))
    #foreach ($prop in $fields.docFields)
        #set ($name = $prop.property)
        #if ($name == "content")
            #set ($prop["prettyName"] = $services.localization.render("doc_content"))
        #elseif ($name == "attachments")
            #set ($prop["prettyName"] = $services.localization.render("doc_attachments"))
        #elseif ($name == "author")
            #set ($prop["prettyName"] = $services.localization.render("doc_author"))
        #elseif ($name == "creator")
            #set ($prop["prettyName"] = $services.localization.render("doc_creator"))
        #elseif ($name == "creationDate")
            #set ($prop["prettyName"] = $services.localization.render("doc_author"))
        #elseif ($name == "title")
            #set ($prop["prettyName"] = $services.localization.render("doc_title"))
        #elseif ($name == "parent")
            #set ($prop["prettyName"] = $services.localization.render("doc_parent"))
        #end
    #end
    ##
    #foreach ($entry in $fields.objFields.entrySet())
        #set ($class = $xwiki.getClass($entry.key).getXWikiClass())
        #foreach ($prop in $entry.value)
            #set ($key = "${entry.key}_${prop.property}")
            #if ($services.localization.render($key) == $key)
                #set ($prop["prettyName"] = $class.get($prop.property).getPrettyName())
            #else
                #set ($prop["prettyName"] = $services.localization.render($key))
            #end
        #end
    #end
    #set($mymap["fields"] = $fields)
#end
#set ($mymap["list"] = $result)
##
#set($discard = $response.setContentType("application/json"))
#set($out = $jsontool.serialize($mymap))
$response.getOutputStream().write($out.getBytes("UTF-8"))
$xcontext.setFinished(true)
{{/velocity}}</content>
</xwikidoc>
